AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters:
  IsDev:
    Type: String
    Default: 'False'
    AllowedValues:
      - 'False'
      - 'True'
  GqlApiName:
    Type: String
    Description: the name applied to the GQL API
  StateTableName:
    Type: String
    Description: the name applied to the dynamo table used to hold the states, if left blank one will be generated
    Default: ''
  StateTableRegion:
    Type: String
    Description: the region which contains the state table,  if left blank defaults to the region hosting the stack
    Default: ''
  TaskTableName:
    Type: String
    Description: the name applied to the dynamo table used to hold the registered tasks, if left blank one will be generated
    Default: ''
  TaskTableRegion:
    Type: String
    Description: the region which contains the state table, if left blank defaults to the region hosting the stack
    Default: ''
  StateTableWorkerRoleArn:
    Type: String
    Description: the IAM role used to interact with the state table
  TaskTableWorkerRoleArn:
    Type: String
    Description: the IAM role used to interact with the task table
Conditions:
  DevDeploy: !Equals [!Ref IsDev, 'True']
  ProdDeploy: !Equals [!Ref IsDev, 'False']
  DefaultStateTableRegion: !Equals [!Ref StateTableRegion, '']
  DefaultTaskTableRegion: !Equals [!Ref TaskTableRegion, '']
Resources:
  DevApiKey:
    Type: AWS::AppSync::ApiKey
    Condition: DevDeploy
    Properties:
      ApiId: !GetAtt LeechApi.ApiId
      Description: "the dev key, not for production use"
      Expires: 1577883600
  StateApi:
    Type: "AWS::AppSync::GraphQLApi"
    Properties:
      Name: !Sub "${GqlApiName}-${AWS::StackName}"
      AuthenticationType: !If [DevDeploy, API_KEY, AWS_IAM]
      LogConfig:
        CloudWatchLogsRoleArn: !Ref TableWorkerRoleArn
        FieldLogLevel: ALL
  StateDataSource:
    Type: "AWS::AppSync::DataSource"
    Properties:
      Type: AMAZON_DYNAMODB
      Description: data source for the Dynamo table holding the PHI
      ServiceRoleArn: !Ref StateTableWorkerRoleArn
      DynamoDBConfig:
        TableName: !Ref StateTableName
        AwsRegion: !If [DefaultStateTableRegion, !Ref "AWS::Region", !Ref StateTableRegion]
        UseCallerCredentials: true
      ApiId: !GetAtt StateApi.ApiId
      Name: !Join
        - "_"
        - - !GetAtt StateApi.ApiId
          - state_datasource
  TaskDataSource:
    Type: "AWS::AppSync::DataSource"
    Properties:
      Type: AMAZON_DYNAMODB
      Description: data source for the Dynamo table holding the PHI
      ServiceRoleArn: !Ref TaskTableWorkerRoleArn
      DynamoDBConfig:
        TableName: !Ref TaskTableName
        AwsRegion: !If [DefaultTaskTableRegion, !Ref "AWS::Region", !Ref TaskTableRegion]
        UseCallerCredentials: true
      ApiId: !GetAtt StateApi.ApiId
      Name: !Join
        - "_"
        - - !GetAtt StateApi.ApiId
          - task_datasource
  StateSchema:
    Type: "AWS::AppSync::GraphQLSchema"
    Properties:
      DefinitionS3Location: gql/schema.graphql
      ApiId: !GetAtt StateApi.ApiId
  QueryGetStateEntry:
    Type: "AWS::AppSync::Resolver"
    Properties:
      RequestMappingTemplateS3Location: gql/resolvers/query_get_state_entry.vtl
      ResponseMappingTemplateS3Location: gql/resolvers/generic_lambda_response.vtl
      TypeName: Query
      DataSourceName: !GetAtt StateDataSource.Name
      ApiId: !GetAtt StateApi.ApiId
      FieldName: getStateEntry
      Kind: UNIT
  QueryListStateEntries:
      Type: "AWS::AppSync::Resolver"
      Properties:
        RequestMappingTemplateS3Location: gql/resolvers/query_list_state_entries.vtl
        ResponseMappingTemplateS3Location: gql/resolvers/generic_lambda_response.vtl
        TypeName: Query
        DataSourceName: !GetAtt StateDataSource.Name
        ApiId: !GetAtt StateApi.ApiId
        FieldName: listStateEntries
        Kind: UNIT
  MutationCreateStateEntry:
    Type: "AWS::AppSync::Resolver"
    Properties:
      RequestMappingTemplateS3Location: gql/resolvers/mutation_create_state_entry.vtl
      ResponseMappingTemplateS3Location: gql/resolvers/generic_lambda_response.vtl
      TypeName: Mutation
      DataSourceName: !GetAtt StateDataSource.Name
      ApiId: !GetAtt StateAPi.ApiId
      FieldName: createStateEntry
      Kind: UNIT
  MutationDeleteStateEntry:
    Type: "AWS::AppSync::Resolver"
    Properties:
      RequestMappingTemplateS3Location: gql/resolvers/mutation_delete_state_entry.vtl
      ResponseMappingTemplateS3Location: gql/resolvers/generic_lambda_response.vtl
      TypeName: Mutation
      DataSourceName: !GetAtt StateDataSource.Name
      ApiId: !GetAtt StateApi.ApiId
      FieldName: deleteStateEntry
      Kind: UNIT
  MutationUpdateStateEntry:
    Type: "AWS::AppSync::Resolver"
    Properties:
      RequestMappingTemplateS3Location: gql/resolvers/mutation_update_state_entry.vtl
      ResponseMappingTemplateS3Location: gql/resolvers/generic_lambda_response.vtl
      TypeName: Mutation
      DataSourceName: !GetAtt StateDataSource.Name
      ApiId: !GetAtt StateApi.ApiId
      FieldName: updateStateEntry
      Kind: UNIT
  QueryGetTaskRegistration:
    Type: "AWS::AppSync::Resolver"
    Properties:
      RequestMappingTemplateS3Location: gql/resolvers/query_get_task_registration.vtl
      ResponseMappingTemplateS3Location: gql/resolvers/generic_lambda_response.vtl
      TypeName: Query
      DataSourceName: !GetAtt TaskDataSource.Name
      ApiId: !GetAtt StateApi.ApiId
      FieldName: getTaskRegistration
      Kind: UNIT
  QueryListTaskRegistration:
      Type: "AWS::AppSync::Resolver"
      Properties:
        RequestMappingTemplateS3Location: gql/resolvers/query_list_task_registrations.vtl
        ResponseMappingTemplateS3Location: gql/resolvers/generic_lambda_response.vtl
        TypeName: Query
        DataSourceName: !GetAtt TaskDataSource.Name
        ApiId: !GetAtt StateApi.ApiId
        FieldName: listTaskRegistrations
        Kind: UNIT
  MutationCreateTaskRegistration:
    Type: "AWS::AppSync::Resolver"
    Properties:
      RequestMappingTemplateS3Location: gql/resolvers/mutation_create_task_registration.vtl
      ResponseMappingTemplateS3Location: gql/resolvers/generic_lambda_response.vtl
      TypeName: Mutation
      DataSourceName: !GetAtt TaskDataSource.Name
      ApiId: !GetAtt StateAPi.ApiId
      FieldName: createTaskRegistration
      Kind: UNIT
  MutationDeleteTaskRegistration:
    Type: "AWS::AppSync::Resolver"
    Properties:
      RequestMappingTemplateS3Location: gql/resolvers/mutation_delete_task_registration.vtl
      ResponseMappingTemplateS3Location: gql/resolvers/generic_lambda_response.vtl
      TypeName: Mutation
      DataSourceName: !GetAtt TaskDataSource.Name
      ApiId: !GetAtt StateApi.ApiId
      FieldName: deleteTaskRegistration
      Kind: UNIT
  MutationUpdateTaskRegistration:
    Type: "AWS::AppSync::Resolver"
    Properties:
      RequestMappingTemplateS3Location: gql/resolvers/mutation_update_task_registration.vtl
      ResponseMappingTemplateS3Location: gql/resolvers/generic_lambda_response.vtl
      TypeName: Mutation
      DataSourceName: !GetAtt TaskDataSource.Name
      ApiId: !GetAtt StateApi.ApiId
      FieldName: updateTaskRegistration
      Kind: UNIT
Outputs:
  ApiId:
    Description: the ID generated for the API
    Value: !GetAtt StateApi.ApiId
  ApiArn:
    Description: the ARN assigned to the API
    Value: !GetAtt StateApi.Arn
  ApiUrl:
    Description: the URL assigned to the generated API
    Value: !GetAtt StateApi.GraphQLUrl
  ApiKeyValue:
    Condition: DevDeploy
    Description: if dev mode is set, the API key generated for testing
    Value: !GetAtt DevApiKey.ApiKey